#!/bin/bash

# Unlock the release repos and move the pre-release packages into them.
# Create a version-specific release tag (for non-data-only releases)
# Lock the release repos


. release-common.sh

check_for_osg_koji

detect_rescue_file

for branch in ${versions[@]}; do
    if [[ $branch = 3.*-upcoming ]]; then
        ver=${ver%-upcoming}
    fi
    read -ra dvers <<< $(osg_dvers $branch) # create array of dvers
    for dver in ${dvers[@]}; do
        prerelease_repo=osg-$branch-$dver-prerelease
        release_repo=osg-$branch-$dver-release

        # Push from pre-release to release
        print_header "Unlocking $release_repo"
        run_cmd "osg-koji edit-tag --unlock $release_repo"
        echo

        print_header "Moving packages from $prerelease_repo to $release_repo"
        pkgs_to_release $branch $dver > move-to-$branch-release-$dver
        if [ -s move-to-$branch-release-$dver ]; then
            run_cmd "xargs --arg-file move-to-$branch-release-$dver osg-koji move-pkg $prerelease_repo $release_repo"
        fi
        echo

        if [ $DATA -eq 0 ]; then
            # Create new release repo for non-$data releases
            versioned_release_repo=osg-$branch-$dver-release-$(ver_tag $branch)
            print_header "Cloning $release_repo to $versioned_release_repo"
            run_cmd "osg-koji clone-tag --all $release_repo $versioned_release_repo"
            echo
        fi

        # Lock repos (data-only releases leave the versioned repos untouched
        # for historical integrity)
        for repo in $release_repo $versioned_release_repo; do
            print_header "Locking $repo"
            run_cmd "osg-koji edit-tag --lock $repo"
            echo
        done

        print_header "Distributing $release_repo"
        # Get the key that all packages in the repo should be signed with
        run_cmd "KEY_ID=$(osg-koji taginfo $release_repo | grep 'tag2distrepo.keys' | awk '{print $3}')"
        # Regenerate the repo
        run_cmd "osg-koji regen-repo $release_repo"
        # Run distrepo
        run_cmd "osg-koji dist-repo $release_repo $KEY_ID --non-latest --nowait"

    done

done

# Don't remove rescue files if user is troubleshooting
if [ $DRY_RUN -eq 0 ]; then
    cleanup_on_success
fi
